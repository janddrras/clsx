---
import Footer from "../components/Footer.astro"
import Nav from "../components/Nav.svelte"
interface Props {
  title: string
  page?: string
}

const { title, page } = Astro.props
---

<script>
  import Lenis from "@studio-freight/lenis"
  import { gsap } from "gsap"
  import { ScrollTrigger } from "gsap/ScrollTrigger"
  gsap.registerPlugin(ScrollTrigger)

  const lenis = new Lenis({ lerp: 0.15 })

  const main = document.querySelector("main")
  const large = main.getAttribute("data-attribute") === "large"

  if (large) {
    main.style.backgroundColor = "#1f1f1f"
    ScrollTrigger.create({
      trigger: "main",
      start: "+=1200",
      markers: true,
      onEnter: () => gsap.to("main", { backgroundColor: "#fff", duration: 1, ease: "power2" }),
      onLeaveBack: () => gsap.to("main", { backgroundColor: "#1f1f1f", duration: 1, ease: "power2" })
    })

    lenis.on("scroll", ScrollTrigger.update)
    gsap.ticker.add((time) => lenis.raf(time * 1000))
    gsap.ticker.lagSmoothing(0)
  } else {
    function raf(time) {
      lenis.raf(time)
      requestAnimationFrame(raf)
    }

    requestAnimationFrame(raf)
  }
</script>

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/icon.svg" />
    <meta name="generator" content={Astro.generator} />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700;900&display=swap" rel="stylesheet" />
    <title>{title}</title>
  </head>
  <body>
    <Nav client:visible {page} />
    <main data-attribute={page}>
      <slot />
    </main>
    <Footer />
  </body>
</html>

<style is:global>
  :root {
    --dark-grey: #4a4a49;
    --black: #1f1f1f;
    --white: white;
    --light-grey: whitesmoke;
    --grey: #c0c2c3;
    --yellow: #e8e221;
    --bright-yellow: rgb(255, 255, 0);
    --yellow-shade: #fcf86e;
    --green: #76cc3e;
    --gradient: linear-gradient(to right, #e8e221, #fcf86e 100%);
    --width: calc(100vw - 2.5rem - 1.2rem);
    --height: calc(100vh - 2.5rem);
    --max-width: 1600px;
    --large-padding: 8rem 4rem;
    --medium-padding: 4rem 4rem;
    --small-padding: 2rem 2rem;
  }
  html {
    font-family: "Montserrat", sans-serif;
    color: var(--black);
    letter-spacing: 0.01rem;
    scroll-behavior: smooth;
  }
  ol,
  ul {
    list-style: none;
  }
  img {
    max-width: 100%;
  }
  *,
  *::after,
  *::before {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }
  a {
    color: inherit;
    text-decoration: none;
  }
  .btn {
    font-size: 1.2rem;
    font-weight: 300;
    padding: 0.7rem 2rem;
    border-radius: 2rem;
    background-color: var(--black);
    color: white;
    cursor: pointer;
    margin-top: 1.5rem;
    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
    transition: all 0.4s ease-in-out;
  }
  .btn:hover {
    transform: scale(0.96);
    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
  }
  main {
    position: relative;
    z-index: 2;
    background-color: rgb(255, 255, 255);
    margin-top: -15vh;
    padding-top: 15vh;
  }
  main::after {
    margin-bottom: 100vh;
    content: "";
    display: block;
  }
  .container {
    max-width: var(--max-width);
    margin: 0 auto;
    padding: 0 1.5rem;
  }
  .wrapper {
    border-radius: 1rem;
    overflow: hidden;
    height: 100%;
  }
  .wrapper img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  /* lenis */
  html.lenis {
    height: auto;
  }

  .lenis.lenis-smooth {
    scroll-behavior: auto;
  }

  .lenis.lenis-smooth [data-lenis-prevent] {
    overscroll-behavior: contain;
  }

  .lenis.lenis-stopped {
    overflow: hidden;
  }

  .lenis.lenis-scrolling iframe {
    pointer-events: none;
  }
</style>
